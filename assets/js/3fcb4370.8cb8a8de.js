"use strict";(self.webpackChunkprojet_iot=self.webpackChunkprojet_iot||[]).push([[801],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>m});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function l(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?l(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var u=a.createContext({}),c=function(e){var r=a.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},s=function(e){var r=c(e.components);return a.createElement(u.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,l=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=c(t),m=n,g=d["".concat(u,".").concat(m)]||d[m]||p[m]||l;return t?a.createElement(g,o(o({ref:r},s),{},{components:t})):a.createElement(g,o({ref:r},s))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var c=2;c<l;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2524:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=t(7462),n=(t(7294),t(3905));const l={sidebar_position:4},o="API Manager",i={unversionedId:"api_manager",id:"api_manager",title:"API Manager",description:"Description",source:"@site/docs/api_manager.md",sourceDirName:".",slug:"/api_manager",permalink:"/docs/api_manager",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api_manager.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Module redis",permalink:"/docs/redis"},next:{title:"Service WS local",permalink:"/docs/ws_local"}},u={},c=[{value:"Description",id:"description",level:2},{value:"Routes Cloud:",id:"routes-cloud",level:2},{value:"Routes Locale:",id:"routes-locale",level:2},{value:"Commandes docker utiles",id:"commandes-docker-utiles",level:2}],s={toc:c};function p(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,a.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"api-manager"},"API Manager"),(0,n.kt)("h2",{id:"description"},"Description"),(0,n.kt)("p",null,"Cette partie se compose de deux services NodeJs avec Express qui serviront l'une \xe0 requeter la base de donn\xe9es locale de Redis et l'autre la base de donn\xe9e Cloud InfluxDb. Ces deux services seront appel\xe9s depuis l'application mobile Flutter, la base de donn\xe9e Cloud sera appel\xe9e en priorit\xe9 et si celle-ci ne peut pas \xeatre requeter, la base de donn\xe9e locale sera requet\xe9 \xe0 la place."),(0,n.kt)("h1",{id:""}),(0,n.kt)("p",null,"Le dockerfile utilise l'image node:alpine, copie le package.json et lance un npm install."),(0,n.kt)("h2",{id:"routes-cloud"},"Routes Cloud:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"/get_users"),(0,n.kt)("li",{parentName:"ul"},"/get_sensors"),(0,n.kt)("li",{parentName:"ul"},"/get_rooms"),(0,n.kt)("li",{parentName:"ul"},"/get_buildings")),(0,n.kt)("h2",{id:"routes-locale"},"Routes Locale:"),(0,n.kt)("h2",{id:"commandes-docker-utiles"},"Commandes docker utiles"),(0,n.kt)("p",null,"Pour build l'image api-manager-local:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker build api-manager-local .\n")),(0,n.kt)("p",null,"Pour build l'image api-manager-cloud:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker build api-manager-cloud .\n")),(0,n.kt)("p",null,"Pour run l'image api-manager-locale :"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker run api-manager-local\n")),(0,n.kt)("p",null,"Pour run l'image api-manager-cloud :"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker run api-manager-cloud\n")))}p.isMDXComponent=!0}}]);